## cinclude "<openssl/rand.h>"
## cinclude "<openssl/evp.h>"
## cinclude "<openssl/hmac.h>"
## linklib "ssl"
## linklib "crypto"

require "stringbuilder"

local function get_hex(buf: *cchar, len: isize): string
  local sb: stringbuilder
  local data = (@*[0]cchar)(buf)
  for i = 0, < len do
    sb:write(("%02x"):format(data[i]))
  end
  return sb:promote()
end

local function RAND_bytes(buf: *cchar, num: cint): cint <cimport, nodecl> end

local EVP_MD <cimport, nodecl> = @record{}

local function HMAC(evp_md: *EVP_MD, key: *void, key_len: cint, data: cstring, data_len: isize, md: cstring, md_len: *cint): cstring <cimport, nodecl> end

local function EVP_sha1(): *EVP_MD <cimport, nodecl> end
local function EVP_sha256(): *EVP_MD <cimport, nodecl> end

local crypt = @record{}

local crypt.get_hex = get_hex
local crypt.rand_bytes = RAND_bytes
local crypt.hmac = HMAC
local crypt.sha1 = EVP_sha1
local crypt.sha256 = EVP_sha256

return crypt
