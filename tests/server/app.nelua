local http = require "...http"

local app = http.new()

app:get("index", "/", function(self: *http.Server)
  return self:text(200, "hello world")
end)

app:get("jsonplaceholder", "/jsonplaceholder", function(self: *http.Server)
  local resp = http.send_request({
    url = "https://jsonplaceholder.typicode.com/todos",
    method = "get"
  })
  return self:json(200, resp.body)
end)

app:get("get_params", "/get_params", function(self: *http.Server)
  local route_params: hashmap(string, string)
  route_params["id"]   = "10"
  route_params["name"] = "james"
  route_params["*"]    = "splat"

  local query_params: hashmap(string, string)
  query_params["id"]   = "10"
  query_params["name"] = "james"
  return self:html(200, ("<a href='%s'>link</a>"):format(self:url_for("params", {
    route_params = route_params,
    query_params = query_params
  })))
end)

app:get("params", "/params/:id/:name/*", function(self: *http.Server)
  return self:text(200, self.req.params["id"] .. " " .. self.req.params["name"] .. " " .. self.req.params["*"])
end)

app:get("datastar-test", "/datastar-test", function(self: *http.Server)
  return self:html(200,
  [[<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>HTML Page</title>
  <script type="module" src="https://cdn.jsdelivr.net/gh/starfederation/datastar@v1.0.0-beta.11/bundles/datastar.js"></script>
</head>
<body>
  <input data-bind-foo />
  <button data-on-click="@get('/stream')">get</button>
</body>
</html>]])
end)

app:get("datastar-stream", "/datastar-stream", function(self: *http.Server)

  local headers: hashmap(string, string)
  headers["Content-Length"] = ""
  local resp: http.Response = {
    status = 200,
    content_type = "text/event-stream",
    headers = headers
  }
  self:write(resp:tostring())
  for i = 1, 10 do
    local err = self:write("event: datastar-merge-signals\n")
    if err ~= "" then break end
    self:write(("data: signals {foo: %d}\n\n"):format(i))
    os.sleep(1)
  end
  return resp
end)

app:serve()
